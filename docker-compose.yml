version: "3.7"

networks:
  proxynet:
    driver: bridge

volumes:
  local_postgres_data:

services:
  db:
    container_name: db
    restart: always
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    expose:
      - "5432"
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    networks:
      - proxynet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  migrate:
    image: migrate/migrate
    volumes:
      - ./cmd/migrator/migrations:/migrations
    command: [ "-source", "file://migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up" ]
    networks:
      - proxynet
    depends_on:
      db:
        condition: service_healthy

  migrate-cities-json:
    build:
      context: .
      dockerfile: Dockerfile_cities_migrate
    networks:
      - proxynet
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_started

  server:
    container_name: server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "8080:8080"
    networks:
      - proxynet
    depends_on:
      db:
        condition: service_healthy