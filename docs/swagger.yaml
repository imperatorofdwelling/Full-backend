basePath: /api/v1
definitions:
  advantage.Advantage:
    properties:
      created_at:
        type: string
      id:
        type: string
      image:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  auth.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.Registration:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  location.Location:
    properties:
      city:
        type: string
      createdAt:
        type: string
      federal_district:
        type: string
      fias_id:
        type: string
      id:
        type: string
      kladr_id:
        type: string
      lat:
        type: string
      lon:
        type: string
      okato:
        type: string
      oktmo:
        type: string
      population:
        type: number
      region_iso_code:
        type: string
      region_name:
        type: string
      updatedAt:
        type: string
    type: object
  reservation.ReservationEntity:
    properties:
      arrived:
        type: string
      departure:
        type: string
      stay_id:
        type: string
      user_id:
        type: string
    type: object
  responseApi.ResponseError:
    properties:
      error:
        type: string
    type: object
  stays.Stay:
    properties:
      created_at:
        type: string
      entrance:
        type: string
      floor:
        type: string
      guests:
        type: integer
      house:
        type: string
      id:
        type: string
      image_main:
        type: string
      images:
        items:
          type: string
        type: array
      is_smoking_prohibited:
        type: boolean
      location_id:
        type: string
      name:
        type: string
      number_of_bathrooms:
        type: integer
      number_of_bedrooms:
        type: integer
      number_of_beds:
        type: integer
      price:
        type: number
      rating:
        type: number
      room:
        type: string
      square:
        type: number
      street:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: IOD App API
  version: "1.0"
paths:
  /advantages/{advantageId}:
    delete:
      consumes:
      - application/json
      description: Delete advantage by id
      parameters:
      - description: advantage id
        in: path
        name: advantageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Delete Advantage
      tags:
      - advantages
    patch:
      consumes:
      - application/json
      description: Update advantage by id
      parameters:
      - description: advantage id
        in: path
        name: advantageId
        required: true
        type: string
      - description: image file
        in: formData
        name: image
        type: file
      - description: title of advantage
        in: formData
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/advantage.Advantage'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Update Advantage
      tags:
      - advantages
  /advantages/all:
    get:
      consumes:
      - application/json
      description: Get all advantages
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/advantage.Advantage'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Get advantages
      tags:
      - advantages
  /advantages/create:
    post:
      consumes:
      - multipart/form-data
      description: Create advantage
      parameters:
      - description: image file
        in: formData
        name: image
        required: true
        type: file
      - description: title of advantage
        in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/advantage.Advantage'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Create Advantage
      tags:
      - advantages
  /locations/{locationName}:
    get:
      consumes:
      - application/json
      description: Find city by matching name
      parameters:
      - description: location name match
        in: path
        name: locationName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/location.Location'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Find city by name
      tags:
      - locations
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates an existing user and returns a JWT token
      parameters:
      - description: Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Login an existing user
      tags:
      - auth
  /registration:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Registration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.Registration'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Register a new user
      tags:
      - auth
  /reservation/create:
    post:
      consumes:
      - application/json
      description: Create reservation
      parameters:
      - description: Create reservation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reservation.ReservationEntity'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Create Reservation
      tags:
      - reservations
  /stays:
    get:
      consumes:
      - application/json
      description: Get all stays
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/stays.Stay'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Get all stays
      tags:
      - stays
  /stays/{stayId}:
    delete:
      consumes:
      - application/json
      description: Delete stay by id
      parameters:
      - description: stay id
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Delete Stay
      tags:
      - stays
    get:
      consumes:
      - application/json
      description: get stay
      parameters:
      - description: stay id
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/stays.Stay'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Get Stay by id
      tags:
      - stays
    put:
      consumes:
      - application/json
      description: Update stay by id
      parameters:
      - description: advantage id
        in: path
        name: stayId
        required: true
        type: string
      - description: id of location
        in: formData
        name: location_id
        required: true
        type: string
      - description: name of stay
        in: formData
        name: name
        type: string
      - description: main image
        in: formData
        name: image_main
        type: file
      - description: images
        in: formData
        name: images
        type: file
      - description: type of stay
        in: formData
        name: type
        type: string
      - description: number of bedrooms
        in: formData
        name: number_of_bedrooms
        type: integer
      - description: number of bathrooms
        in: formData
        name: number_of_beds
        type: integer
      - description: number of beds
        in: formData
        name: number_of_bathrooms
        type: integer
      - description: number of guests
        in: formData
        name: guests
        type: integer
      - description: rating
        in: formData
        name: rating
        type: number
      - description: smoking
        in: formData
        name: is_smoking_prohibited
        type: boolean
      - description: square of home
        in: formData
        name: square
        type: number
      - description: street
        in: formData
        name: street
        required: true
        type: string
      - description: house
        in: formData
        name: house
        required: true
        type: string
      - description: entrance if exists
        in: formData
        name: entrance
        type: string
      - description: floor if exists
        in: formData
        name: floor
        type: string
      - description: room if exists
        in: formData
        name: room
        type: string
      - description: price of stay
        in: formData
        name: price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/stays.Stay'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Update Stay
      tags:
      - stays
  /stays/create:
    post:
      consumes:
      - application/json
      description: Create stay
      parameters:
      - description: id of user
        in: formData
        name: user_id
        required: true
        type: string
      - description: id of location
        in: formData
        name: location_id
        required: true
        type: string
      - description: name of stay
        in: formData
        name: name
        type: string
      - description: main image
        in: formData
        name: image_main
        type: file
      - description: images
        in: formData
        name: images
        type: file
      - description: type of stay
        in: formData
        name: type
        type: string
      - description: number of bedrooms
        in: formData
        name: number_of_bedrooms
        type: integer
      - description: number of bathrooms
        in: formData
        name: number_of_beds
        type: integer
      - description: number of beds
        in: formData
        name: number_of_bathrooms
        type: integer
      - description: number of guests
        in: formData
        name: guests
        type: integer
      - description: rating
        in: formData
        name: rating
        type: number
      - description: smoking
        in: formData
        name: is_smoking_prohibited
        type: boolean
      - description: square of home
        in: formData
        name: square
        type: number
      - description: street
        in: formData
        name: street
        required: true
        type: string
      - description: house
        in: formData
        name: house
        required: true
        type: string
      - description: entrance if exists
        in: formData
        name: entrance
        type: string
      - description: floor if exists
        in: formData
        name: floor
        type: string
      - description: room if exists
        in: formData
        name: room
        type: string
      - description: price of stay
        in: formData
        name: price
        type: number
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Create Stay
      tags:
      - stays
  /stays/user/{userId}:
    get:
      consumes:
      - application/json
      description: Get stays by user id
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/stays.Stay'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Get all stays by user id
      tags:
      - stays
  /staysadvantage/{id}:
    delete:
      consumes:
      - application/json
      description: Create staysadvantage
      parameters:
      - description: stay advantage id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Create StaysAdvantage
      tags:
      - staysadvantage
  /staysadvantage/create:
    post:
      consumes:
      - application/json
      description: Create staysadvantage
      parameters:
      - description: stay id
        in: body
        name: stay_id
        required: true
        schema:
          type: string
      - description: advantage id
        in: body
        name: advantage_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/responseApi.ResponseError'
      summary: Create StaysAdvantage
      tags:
      - staysadvantage
swagger: "2.0"
