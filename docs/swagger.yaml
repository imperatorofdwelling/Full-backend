basePath: /api/v1
definitions:
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_advantage.Advantage:
    properties:
      created_at:
        type: string
      id:
        type: string
      image:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_auth.Login:
    properties:
      email:
        type: string
      isHashed:
        type: boolean
      password:
        type: string
    required:
    - email
    - isHashed
    - password
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_auth.Registration:
    properties:
      email:
        type: string
      isHashed:
        type: boolean
      name:
        type: string
      password:
        type: string
    required:
    - email
    - isHashed
    - name
    - password
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_contracts.Contract:
    properties:
      created_at:
        type: string
      date_end:
        type: string
      date_start:
        type: string
      entrance:
        type: string
      floor:
        type: string
      house:
        type: string
      price:
        type: number
      room:
        type: string
      square:
        type: number
      stay_id:
        type: string
      street:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_favourite.FavouriteEntity:
    properties:
      created_at:
        type: string
      description:
        type: string
      stay_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_location.Location:
    properties:
      city:
        type: string
      createdAt:
        type: string
      federal_district:
        type: string
      fias_id:
        type: string
      id:
        type: string
      kladr_id:
        type: string
      lat:
        type: string
      lon:
        type: string
      okato:
        type: string
      oktmo:
        type: string
      population:
        type: number
      region_iso_code:
        type: string
      region_name:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.Reservation:
    properties:
      arrived:
        type: string
      created_at:
        type: string
      departure:
        type: string
      id:
        type: string
      stay_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.ReservationEntity:
    properties:
      arrived:
        type: string
      departure:
        type: string
      stay_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.ReservationUpdateEntity:
    properties:
      arrived:
        type: string
      departure:
        type: string
      id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_searchhistory.SearchHistory:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.Stay:
    properties:
      created_at:
        type: string
      entrance:
        type: string
      floor:
        type: string
      guests:
        type: integer
      house:
        type: string
      id:
        type: string
      image_main:
        type: string
      images:
        items:
          type: integer
        type: array
      is_smoking_prohibited:
        type: boolean
      location_id:
        type: string
      name:
        type: string
      number_of_bathrooms:
        type: integer
      number_of_bedrooms:
        type: integer
      number_of_beds:
        type: integer
      price:
        type: number
      rating:
        type: number
      room:
        type: string
      square:
        type: number
      street:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.StayEntity:
    properties:
      entrance:
        type: string
      floor:
        type: string
      guests:
        type: integer
      house:
        type: string
      is_smoking_prohibited:
        default: false
        type: boolean
      location_id:
        type: string
      name:
        type: string
      number_of_bathrooms:
        type: integer
      number_of_bedrooms:
        type: integer
      number_of_beds:
        type: integer
      price:
        type: number
      room:
        type: string
      square:
        type: number
      street:
        type: string
      type:
        type: string
      user_id:
        type: string
    required:
    - guests
    - house
    - location_id
    - name
    - number_of_bathrooms
    - number_of_bedrooms
    - number_of_beds
    - price
    - square
    - street
    - type
    - user_id
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysadvantage.StayAdvantageCreateReq:
    properties:
      advantage_id:
        type: string
      stay_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreports.StaysReportEntity:
    properties:
      description:
        type: string
      reportID:
        type: string
      stayName:
        type: string
      title:
        type: string
      userName:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReview:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      rating:
        type: number
      stay_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReviewEntity:
    properties:
      description:
        type: string
      rating:
        type: number
      stay_id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_user.User:
    description: User details
    properties:
      avatar:
        items:
          type: integer
        type: array
      birth_date:
        $ref: '#/definitions/sql.NullTime'
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
      national:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_domain_models_usersreports.UsersReportEntity:
    properties:
      description:
        type: string
      owner_name:
        type: string
      report_id:
        type: string
      title:
        type: string
      user_name:
        type: string
    type: object
  github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError:
    properties:
      error:
        type: string
    type: object
  sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: IOD App API
  version: "1.0"
paths:
  /advantages/{advantageId}:
    delete:
      consumes:
      - application/json
      description: Delete advantage by id
      parameters:
      - description: advantage id
        in: path
        name: advantageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Delete Advantage
      tags:
      - advantages
    patch:
      consumes:
      - application/json
      description: Update advantage by id
      parameters:
      - description: advantage id
        in: path
        name: advantageId
        required: true
        type: string
      - description: image file
        in: formData
        name: image
        type: file
      - description: title of advantage
        in: formData
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_advantage.Advantage'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update Advantage
      tags:
      - advantages
  /advantages/all:
    get:
      consumes:
      - application/json
      description: Get all advantages
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_advantage.Advantage'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get advantages
      tags:
      - advantages
  /advantages/create:
    post:
      consumes:
      - multipart/form-data
      description: Create advantage
      parameters:
      - description: image file
        in: formData
        name: image
        required: true
        type: file
      - description: title of advantage
        in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create Advantage
      tags:
      - advantages
  /contract:
    get:
      consumes:
      - application/json
      description: Retrieve all contracts for a user by their user ID
      produces:
      - application/json
      responses:
        "200":
          description: ok" // Adjust the type based on your actual Contract struct
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_contracts.Contract'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get All Contracts
      tags:
      - contracts
  /contract/{stayId}:
    post:
      consumes:
      - application/json
      description: Create a new contract for a specific stay by user ID
      parameters:
      - description: The ID of the stay
        in: path
        name: stayId
        required: true
        type: string
      - description: Contract details including dateStart and dateEnd
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Contract created successfully with message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Add a New Contract
      tags:
      - contracts
    put:
      consumes:
      - application/json
      description: Update a contract for a specific stay by user ID
      parameters:
      - description: The ID of the stay
        in: path
        name: stayId
        required: true
        type: string
      - description: Contract details including dateStart and dateEnd
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated contract information
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update an Existing Contract
      tags:
      - contracts
  /favourites:
    get:
      consumes:
      - application/json
      description: Retrieves a list of favourite stays for the user based on the user
        ID from context.
      produces:
      - application/json
      responses:
        "200":
          description: List of favourite stays
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_favourite.FavouriteEntity'
            type: array
        "401":
          description: User not logged in
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all favourite stays for a user
      tags:
      - favourites
  /favourites/{stayId}:
    delete:
      consumes:
      - application/json
      description: Remove a stay from the user's favourites list using their user
        ID from context and the stay ID from the URL.
      parameters:
      - description: ID of the stay to be removed from favourites
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully removed from favourites
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not logged in
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Remove a stay from user favourites
      tags:
      - favourites
    post:
      consumes:
      - application/json
      description: Add a stay to the user's favourites list using their user ID from
        context and the stay ID from the URL.
      parameters:
      - description: ID of the stay to be added to favourites
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added to favourites
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not logged in
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Add a stay to user favourites
      tags:
      - favourites
  /history:
    get:
      consumes:
      - application/json
      description: Get all search history for a user by ID
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_searchhistory.SearchHistory'
            type: array
        "401":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get Search History
      tags:
      - search-history
    post:
      consumes:
      - application/json
      description: Add a new entry to the search history for a user
      parameters:
      - description: Name of the search history entry
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Add Search History
      tags:
      - search-history
  /locations/{locationName}:
    get:
      consumes:
      - application/json
      description: Find city by matching name
      parameters:
      - description: location name match
        in: path
        name: locationName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_location.Location'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Find city by name
      tags:
      - locations
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates an existing user and returns a JWT token
      parameters:
      - description: Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_auth.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Login an existing user
      tags:
      - auth
  /registration:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Registration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_auth.Registration'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Register a new user
      tags:
      - auth
  /report:
    get:
      description: Retrieves all stay reports for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreports.StaysReportEntity'
            type: array
        "401":
          description: '{"error": "user not logged in"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all stay reports
      tags:
      - stays-reports
  /report/{reportId}:
    delete:
      description: Deletes a specific stay report by report ID
      parameters:
      - description: Report ID
        in: path
        name: reportId
        required: true
        type: string
      responses:
        "200":
          description: '{"message": "Stay report was deleted"}'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: '{"error": "user not logged in"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Delete a stay report
      tags:
      - stays-reports
    put:
      consumes:
      - application/json
      description: Updates a specific stay report
      parameters:
      - description: Report ID
        in: path
        name: reportId
        required: true
        type: string
      - description: Updated report data
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated stays report object
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreports.StaysReportEntity'
        "400":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: '{"error": "user not logged in"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update a stay report
      tags:
      - stays-reports
  /report/create/{stayId}:
    post:
      consumes:
      - application/json
      description: Creates a new stay report for a specific stay
      parameters:
      - description: Stay ID
        in: path
        name: stayId
        required: true
        type: string
      - description: Report data
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: '{"message": "Stay report created successfully"}'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: '{"error": "user not logged in"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: '{"error": "message"}'
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create a stay report
      tags:
      - stays-reports
  /reservation/{reservationID}:
    delete:
      consumes:
      - application/json
      description: Delete reservation by id
      parameters:
      - description: reservation id
        in: path
        name: reservationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Delete Reservation
      tags:
      - reservations
    get:
      consumes:
      - application/json
      description: Get reservation by id
      parameters:
      - description: reservation id
        in: path
        name: reservationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.Reservation'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get Reservation
      tags:
      - reservations
  /reservation/create:
    post:
      consumes:
      - application/json
      description: Create reservation (arrived and departure should be TIMESTAMP type)
      parameters:
      - description: Create reservation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.ReservationEntity'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create Reservation
      tags:
      - reservations
  /reservation/update/{reservationId}:
    put:
      consumes:
      - application/json
      description: Update an existing reservation by its ID
      parameters:
      - description: ID of the reservation to update
        in: path
        name: reservationId
        required: true
        type: string
      - description: Details to update the reservation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.ReservationUpdateEntity'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated reservation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: Reservation not found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update Reservation
      tags:
      - reservations
  /reservation/user/{userID}:
    get:
      consumes:
      - application/json
      description: Get reservation by user id
      parameters:
      - description: user id
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_reservation.Reservation'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all Reservations
      tags:
      - reservations
  /stays:
    get:
      consumes:
      - application/json
      description: Get all stays
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.Stay'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all stays
      tags:
      - stays
  /stays/{stayId}:
    delete:
      consumes:
      - application/json
      description: Delete stay by id
      parameters:
      - description: stay id
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Delete Stay
      tags:
      - stays
    get:
      consumes:
      - application/json
      description: get stay
      parameters:
      - description: stay id
        in: path
        name: stayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.Stay'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get Stay by id
      tags:
      - stays
    put:
      consumes:
      - application/json
      description: Update stay by id
      parameters:
      - description: request stay data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.StayEntity'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.Stay'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update Stay
      tags:
      - stays
  /stays/create:
    post:
      consumes:
      - application/json
      description: Create stay
      parameters:
      - description: request stay data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.StayEntity'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create Stay
      tags:
      - stays
  /stays/user/{userId}:
    get:
      consumes:
      - application/json
      description: Get stays by user id
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_stays.Stay'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all stays by user id
      tags:
      - stays
  /staysadvantage/{id}:
    delete:
      consumes:
      - application/json
      description: Create staysAdvantage
      parameters:
      - description: stay advantage id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create StaysAdvantage
      tags:
      - staysAdvantage
  /staysadvantage/create:
    post:
      consumes:
      - application/json
      description: Create staysAdvantage
      parameters:
      - description: staysAdvantage request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysadvantage.StayAdvantageCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create StaysAdvantage
      tags:
      - staysAdvantage
  /staysreviews:
    get:
      consumes:
      - application/json
      description: Get all Stays reviews
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReview'
            type: array
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get all Stays review
      tags:
      - staysReviews
  /staysreviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Stays_review by id
      parameters:
      - description: stays review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Delete Stays_review
      tags:
      - staysReviews
    get:
      consumes:
      - application/json
      description: Get Stays review by id
      parameters:
      - description: stays review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReview'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get Stays review
      tags:
      - staysReviews
  /staysreviews/create:
    post:
      consumes:
      - application/json
      description: Create stays_review
      parameters:
      - description: stays review request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReviewEntity'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        default:
          description: Error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Create Stays_review
      tags:
      - staysReviews
  /staysreviews/update/{id}:
    put:
      consumes:
      - application/json
      description: Update a stays review by its ID
      parameters:
      - description: ID of the stays review to update
        in: path
        name: id
        required: true
        type: string
      - description: Details to update the stays review
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_staysreviews.StaysReviewEntity'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated stays review
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: Stays review not found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update Stays Review
      tags:
      - staysReviews
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user with the provided ID
      operationId: deleteUserByID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User successfully deleted
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieves a user by the provided ID
      operationId: getUserByID
      parameters:
      - description: User  ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_user.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: User  not found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user with the provided ID
      operationId: updateUserByID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update data
        in: body
        name: model.User
        required: true
        schema:
          $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_user.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_user.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a user by ID
      tags:
      - users
  /user/report/:
    get:
      description: Retrieves all reports created by a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All User Reports
      tags:
      - UsersReports
  /user/report/{reportId}:
    delete:
      description: Deletes a specified report created by a user
      parameters:
      - description: ID of the report to delete
        in: path
        name: reportId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete User Report
      tags:
      - UsersReports
    put:
      consumes:
      - application/json
      description: Updates an existing report for a specified user
      parameters:
      - description: ID of the report to update
        in: path
        name: reportId
        required: true
        type: string
      - description: Report content with title and description
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated user report object
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_domain_models_usersreports.UsersReportEntity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_imperatorofdwelling_Full-backend_internal_utils_response.ResponseError'
      summary: Update User Report
      tags:
      - UsersReports
  /user/report/create/{toBlameId}:
    post:
      consumes:
      - application/json
      description: Creates a new report on a user by another user
      parameters:
      - description: ID of the user being reported
        in: path
        name: toBlameId
        required: true
        type: string
      - description: Report content with title and description
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create User Report
      tags:
      - UsersReports
swagger: "2.0"
