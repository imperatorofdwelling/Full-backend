// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"context"
	http "github.com/imperatorofdwelling/Website-backend/internal/api"
	"github.com/imperatorofdwelling/Website-backend/internal/api/handler"
	config "github.com/imperatorofdwelling/Website-backend/internal/config/db"
	"github.com/imperatorofdwelling/Website-backend/internal/db"
	"github.com/imperatorofdwelling/Website-backend/internal/repo/account"
	"github.com/imperatorofdwelling/Website-backend/internal/service"
	"log/slog"
)

// Injectors from wire.go:
func InitializeAPI(cfg config.DataBase, log *slog.Logger) (*http.ServerHTTP, error) {
	bd, err := db.ConnectToBD(cfg)
	if err != nil {
		return nil, err
	}
	log.Info("DB connected")
	// Repository
	accountRepository := account.NewAccountDataBase(bd)
	//service - logic
	userService := service.NewService(accountRepository)

	// Init Migrate
	err = userService.Migrate(context.Background(), log)
	if err != nil {
		return nil, err
	}

	userHandler := handler.NewHandler(userService)
	log.Info("handler initialized")
	serverHTTP := http.NewServerHTTP(userHandler, log)
	log.Info("server http initialized", *serverHTTP)
	return serverHTTP, nil
}
