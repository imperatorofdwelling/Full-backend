// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/imperatorofdwelling/Website-backend/internal/api"
	"github.com/imperatorofdwelling/Website-backend/internal/config"
	"github.com/imperatorofdwelling/Website-backend/internal/db"
	providers3 "github.com/imperatorofdwelling/Website-backend/internal/domain/providers/advantage"
	providers4 "github.com/imperatorofdwelling/Website-backend/internal/domain/providers/file"
	providers2 "github.com/imperatorofdwelling/Website-backend/internal/domain/providers/location"
	providers5 "github.com/imperatorofdwelling/Website-backend/internal/domain/providers/stays"
	"github.com/imperatorofdwelling/Website-backend/internal/domain/providers/user"
	"log/slog"
)

// Injectors from wire.go:

func InitializeAPI(cfg *config.Config, log *slog.Logger) (*api.ServerHTTP, error) {
	sqlDB, err := db.ConnectToBD(cfg)
	if err != nil {
		return nil, err
	}
	userRepository := providers.ProvideUserRepository(sqlDB)
	userService := providers.ProvideUserService(userRepository)
	userHandler := providers.ProvideUserHandler(userService, log)
	repo := providers2.ProvideLocationRepository(sqlDB)
	service := providers2.ProvideLocationService(repo)
	handler := providers2.ProvideLocationHandler(service, log)
	advantageRepo := providers3.ProvideAdvantageRepository(sqlDB)
	fileService := providers4.ProvideFileService()
	advantageService := providers3.ProvideAdvantageService(advantageRepo, fileService)
	advantageHandler := providers3.ProvideAdvantageHandler(advantageService, log)
	staysRepo := providers5.ProvideStaysRepo(sqlDB)
	staysService := providers5.ProvideStaysService(staysRepo, service)
	staysHandler := providers5.ProvideStaysHandler(staysService, log)
	serverHTTP := api.NewServerHTTP(cfg, userHandler, handler, advantageHandler, staysHandler)
	return serverHTTP, nil
}
