// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ConfirmEmailService is an autogenerated mock type for the ConfirmEmailService type
type ConfirmEmailService struct {
	mock.Mock
}

// CreateOTPEmail provides a mock function with given fields: ctx, userID
func (_m *ConfirmEmailService) CreateOTPEmail(ctx context.Context, userID string) error {
	ret := _m.Called(ctx, userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateOTPPassword provides a mock function with given fields: ctx, email
func (_m *ConfirmEmailService) CreateOTPPassword(ctx context.Context, email string) error {
	ret := _m.Called(ctx, email)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendOTPEmail provides a mock function with given fields: ctx, userID, userOTP, title
func (_m *ConfirmEmailService) SendOTPEmail(ctx context.Context, userID string, userOTP string, title string) error {
	ret := _m.Called(ctx, userID, userOTP, title)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(ctx, userID, userOTP, title)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewConfirmEmailService interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfirmEmailService creates a new instance of ConfirmEmailService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfirmEmailService(t mockConstructorTestingTNewConfirmEmailService) *ConfirmEmailService {
	mock := &ConfirmEmailService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
